[{"A:\\ReactJS\\resume-manager\\src\\reportWebVitals.js":"1","A:\\ReactJS\\resume-manager\\src\\App.js":"2","A:\\ReactJS\\resume-manager\\src\\index.js":"3","A:\\ReactJS\\resume-manager\\src\\components\\navbar\\navbar.jsx":"4","A:\\ReactJS\\resume-manager\\src\\components\\home\\home.jsx":"5","A:\\ReactJS\\resume-manager\\src\\theme.js":"6","A:\\ReactJS\\resume-manager\\src\\components\\sidebar\\sidebar.jsx":"7","A:\\ReactJS\\resume-manager\\src\\state\\global.js":"8","A:\\ReactJS\\resume-manager\\src\\components\\preview\\preview.jsx":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":1135,"mtime":1606722618177,"results":"12","hashOfConfig":"11"},{"size":303,"mtime":1606638129253,"results":"13","hashOfConfig":"11"},{"size":790,"mtime":1606643434000,"results":"14","hashOfConfig":"11"},{"size":4937,"mtime":1606738016495,"results":"15","hashOfConfig":"11"},{"size":243,"mtime":1606721742018,"results":"16","hashOfConfig":"11"},{"size":1352,"mtime":1606735393196,"results":"17","hashOfConfig":"11"},{"size":1888,"mtime":1606735112493,"results":"18","hashOfConfig":"11"},{"size":9697,"mtime":1606736113809,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sq6838",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},"A:\\ReactJS\\resume-manager\\src\\reportWebVitals.js",[],"A:\\ReactJS\\resume-manager\\src\\App.js",[],"A:\\ReactJS\\resume-manager\\src\\index.js",[],["41","42"],"A:\\ReactJS\\resume-manager\\src\\components\\navbar\\navbar.jsx",[],"A:\\ReactJS\\resume-manager\\src\\components\\home\\home.jsx",["43","44"],"import React from \"react\";\r\nimport \"./home.scss\";\r\nimport { resumes, currentResumeId } from \"../../state/global\";\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n  Container,\r\n  Divider,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Switch,\r\n  Tab,\r\n  Tabs,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nexport class HomeComponent extends React.Component {\r\n  state = {\r\n    currentResume: null,\r\n    resumes: {},\r\n    isAutoUpdate: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    resumes.subscribe((resumes) => {\r\n      this.setState({ resumes: resumes });\r\n    });\r\n    currentResumeId.subscribe((currentResume) => {\r\n      this.setState({\r\n        currentResume: resumes.value[currentResume],\r\n      });\r\n    });\r\n  }\r\n\r\n  handleIsAutoUpdateChange($event) {\r\n    this.updateCurrentResumeGlobally();\r\n    this.setState({ isAutoUpdate: $event.target.checked });\r\n  }\r\n\r\n  handleFormChange($event, attrib) {\r\n    let resume = this.state.currentResume;\r\n    resume[attrib] = $event.target.value;\r\n    this.setState({ currentResume: resume });\r\n\r\n    if (!this.state.isAutoUpdate) return;\r\n    this.updateCurrentResumeGlobally();\r\n  }\r\n\r\n  updateCurrentResumeGlobally() {\r\n    let newResumes = resumes.value;\r\n    newResumes[this.state.currentResume.id] = this.state.currentResume;\r\n    resumes.next(newResumes);\r\n  }\r\n\r\n  render() {\r\n    const resume = this.state.currentResume;\r\n    if (!resume) return <CircularProgress />;\r\n    return (\r\n      <div className=\"home\">\r\n        <Container>\r\n          {/* Header */}\r\n          <div className=\"header\">\r\n            <div className=\"intro\">\r\n              <Typography variant=\"h6\" color=\"secondary\">\r\n                Resume for\r\n              </Typography>\r\n              <Typography variant=\"h4\">{resume.role}</Typography>\r\n            </div>\r\n            <div className=\"actions\">\r\n              <FormControlLabel\r\n                control={\r\n                  <Switch\r\n                    checked={this.state.isAutoUpdate}\r\n                    onChange={this.handleIsAutoUpdateChange.bind(this)}\r\n                    name=\"autoUpdate\"\r\n                    label\r\n                  />\r\n                }\r\n                label=\"Auto Update\"\r\n              />\r\n              {!this.state.isAutoUpdate && (\r\n                <Button\r\n                  onClick={this.updateCurrentResumeGlobally.bind(this)}\r\n                  color=\"secondary\"\r\n                >\r\n                  Update\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <br />\r\n          <Divider />\r\n          <br />\r\n\r\n          {/* Form Control */}\r\n          <FormControl fullWidth>\r\n            <Typography variant=\"h6\">Personal Information</Typography>\r\n            <br />\r\n            <TextField\r\n              autoFocus\r\n              label=\"My Name\"\r\n              variant=\"outlined\"\r\n              onChange={($event) => {\r\n                this.handleFormChange($event, \"name\");\r\n              }}\r\n              defaultValue={resume.name}\r\n            />\r\n            <br />\r\n            <TextField\r\n              label=\"Role\"\r\n              variant=\"outlined\"\r\n              onChange={($event) => {\r\n                this.handleFormChange($event, \"role\");\r\n              }}\r\n              defaultValue={resume.role}\r\n            />\r\n            <br />\r\n            <TextField\r\n              multiline\r\n              rows={3}\r\n              inputProps={{\r\n                maxLength: 270,\r\n              }}\r\n              label=\"About Me\"\r\n              variant=\"outlined\"\r\n              onChange={($event) => {\r\n                this.handleFormChange($event, \"roleDesc\");\r\n              }}\r\n              defaultValue={resume.roleDesc}\r\n            />\r\n            <br />\r\n            <TextField\r\n              label=\"Address\"\r\n              variant=\"outlined\"\r\n              onChange={($event) => {\r\n                this.handleFormChange($event, \"address\");\r\n              }}\r\n              defaultValue={resume.address}\r\n            />\r\n            <br />\r\n            <TextField\r\n              label=\"Email\"\r\n              variant=\"outlined\"\r\n              onChange={($event) => {\r\n                this.handleFormChange($event, \"email\");\r\n              }}\r\n              defaultValue={resume.email}\r\n            />\r\n            <br />\r\n            <TextField\r\n              inputProps={{\r\n                maxLength: 10,\r\n              }}\r\n              type=\"number\"\r\n              label=\"Phone Number\"\r\n              variant=\"outlined\"\r\n              defaultValue={resume.phoneNumber}\r\n              onInput={($event) => {\r\n                $event.target.value = Math.max(0, parseInt($event.target.value))\r\n                  .toString()\r\n                  .slice(0, 10);\r\n                this.handleFormChange($event, \"phoneNumber\");\r\n              }}\r\n            />\r\n            <br />\r\n          </FormControl>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","A:\\ReactJS\\resume-manager\\src\\theme.js",[],"A:\\ReactJS\\resume-manager\\src\\components\\sidebar\\sidebar.jsx",[],"A:\\ReactJS\\resume-manager\\src\\state\\global.js",[],"A:\\ReactJS\\resume-manager\\src\\components\\preview\\preview.jsx",["45"],"import React from \"react\";\r\nimport { currentResumeId, resumes } from \"../../state/global\";\r\n\r\nconst primary = \"#1c76b3\";\r\nconst tools = {\r\n  center: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n};\r\nconst styles = {\r\n  preview: {\r\n    ...tools.center,\r\n    maxHeight: \"calc(100vh - 4rem)\",\r\n  },\r\n  wrapper: {\r\n    transform: \"scale(.8)\",\r\n  },\r\n  resume: {\r\n    margin: 0,\r\n    padding: 0,\r\n    background: \"#fff\",\r\n    color: \"#071a52\",\r\n    fontFamily: \"Poppins\",\r\n    width: \"39.7rem\",\r\n    height: \"56rem\",\r\n    padding: \"0 1.5rem\",\r\n  },\r\n  typography: {\r\n    heading: {\r\n      fontWeight: \"700\",\r\n      color: primary,\r\n      borderBottom: `1px solid ${primary}`,\r\n      borderRight: `5px solid ${primary}`,\r\n      fontSize: \"0.9rem\",\r\n      marginBottom: \"0.7rem\",\r\n    },\r\n    sHeading: {\r\n      fontWeight: \"600\",\r\n      fontSize: \"0.7rem\",\r\n      marginTop: \"0.7rem\",\r\n      marginBottom: \"0.1rem\",\r\n    },\r\n    xs: {\r\n      fontSize: \"0.7rem\",\r\n      lineHeight: \"0.9rem\",\r\n    },\r\n    s: {\r\n      fontSize: \"0.8rem\",\r\n      lineHeight: \"0.9rem\",\r\n    },\r\n    l: {\r\n      fontSize: \"0.9rem\",\r\n      lineHeight: \"0.9rem\",\r\n    },\r\n  },\r\n  spacing: {\r\n    m1: {\r\n      marginTop: \"0.1rem\",\r\n      marginBottom: \"0.1rem\",\r\n    },\r\n    m2: {\r\n      marginTop: \"0.2rem\",\r\n      marginBottom: \"0.2rem\",\r\n    },\r\n    m3: {\r\n      marginTop: \"0.3rem\",\r\n      marginBottom: \"0.3rem\",\r\n    },\r\n    m4: {\r\n      marginTop: \"0.4rem\",\r\n      marginBottom: \"0.4rem\",\r\n    },\r\n  },\r\n  top: {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"1fr 1fr\",\r\n    gridColumnGap: \"5rem\",\r\n    alignItems: \"center\",\r\n    padding: \"1.5rem 0\",\r\n  },\r\n  bottom: {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"28% auto\",\r\n  },\r\n  name: {\r\n    fontSize: \"1.7rem\",\r\n    fontWeight: \"600\",\r\n    color: primary,\r\n  },\r\n  role: {\r\n    marginTop: \"0.2rem\",\r\n    fontSize: \"0.95rem\",\r\n    fontFamily: \"Roboto Slab\",\r\n    fontWeight: \"600\",\r\n    color: \"#666666\",\r\n  },\r\n  description: {\r\n    ...tools.center,\r\n    justifyContent: \"flex-end\",\r\n    fontSize: \"0.6rem\",\r\n    fontStyle: \"italic\",\r\n    lineHeight: \"0.8rem\",\r\n  },\r\n  right: {\r\n    paddingLeft: \"1.5rem\",\r\n  },\r\n  section: {\r\n    marginBottom: \"1rem\",\r\n  },\r\n  sectionDated: {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"25% auto\",\r\n    gridGap: \"0.7rem\",\r\n    marginTop: \"0.4rem\",\r\n    marginBottom: \"0\",\r\n  },\r\n  sectionHeading: {\r\n    marginBottom: \"0.7rem\",\r\n  },\r\n  sectionSHeading: {\r\n    fontSize: \"0.8rem\",\r\n    marginTop: \"0\",\r\n  },\r\n  date: {\r\n    fontWeight: \"700\",\r\n    lineHeight: \"1.1rem\",\r\n    fontSize: \"0.7rem\",\r\n  },\r\n  shortDesc: {\r\n    marginBottom: \"0.1rem\",\r\n  },\r\n  ul: {\r\n    margin: \"0\",\r\n    padding: \"0\",\r\n    paddingLeft: \"1rem\",\r\n  },\r\n  li: {\r\n    margin: 0,\r\n    lineHeight: \"1rem\",\r\n    fontSize: \"0.7rem\",\r\n    marginBottom: \"0.1rem\",\r\n  },\r\n};\r\n\r\nexport class PreviewComponent extends React.Component {\r\n  state = {\r\n    currentResume: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    currentResumeId.subscribe((currentResume) => {\r\n      this.setState({ currentResume: resumes.value[currentResume] });\r\n    });\r\n    resumes.subscribe((resumes) => {\r\n      this.setState({ currentResume: resumes[currentResumeId.value] });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const resume = this.state.currentResume;\r\n    if (!resume) return <div>Resume not Found!</div>;\r\n\r\n    return (\r\n      <div style={styles.preview}>\r\n        <div style={styles.wrapper}>\r\n          <div style={styles.resume}>\r\n            <div style={styles.top}>\r\n              <div>\r\n                <div style={styles.name}>{resume.name}</div>\r\n                <div style={styles.role}>{resume.role}</div>\r\n              </div>\r\n              <div style={styles.description}>{resume.roleDesc}</div>\r\n            </div>\r\n            <div style={styles.bottom}>\r\n              <div>\r\n                <section style={styles.section}>\r\n                  <div style={styles.typography.heading}>\r\n                    Personal Information\r\n                  </div>\r\n                  <div style={styles.typography.sHeading}>Address</div>\r\n                  <div style={styles.typography.xs}>{resume.address}</div>\r\n                  <div style={styles.typography.sHeading}>Email Address</div>\r\n                  <div style={styles.typography.xs}>{resume.email}</div>\r\n                  <div style={styles.typography.sHeading}>Phone Number</div>\r\n                  <div style={styles.typography.xs}>{resume.phoneNumber}</div>\r\n                </section>\r\n                <section style={styles.section}>\r\n                  <div style={styles.typography.heading}>Skils</div>\r\n                  {resume.skills.map((skill) => {\r\n                    return (\r\n                      <div\r\n                        style={{\r\n                          ...styles.typography.xs,\r\n                          ...styles.spacing.m2,\r\n                        }}\r\n                      >\r\n                        {skill}\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </section>\r\n                <section style={styles.section}>\r\n                  <div style={styles.typography.heading}>Software</div>\r\n                  {resume.softwares.map((software) => {\r\n                    return (\r\n                      <div\r\n                        style={{\r\n                          ...styles.typography.xs,\r\n                          ...styles.spacing.m2,\r\n                        }}\r\n                      >\r\n                        {software}\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </section>\r\n                <section style={styles.section}>\r\n                  <div style={styles.typography.heading}>Languages</div>\r\n                  {resume.languages.map((language) => {\r\n                    return (\r\n                      <div\r\n                        style={{\r\n                          ...styles.typography.xs,\r\n                          ...styles.spacing.m2,\r\n                        }}\r\n                      >\r\n                        {language}\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </section>\r\n              </div>\r\n              <div style={styles.right}>\r\n                <section style={styles.section}>\r\n                  <div style={styles.typography.heading}>Projects</div>\r\n                  {resume.projects.map((project) => {\r\n                    return (\r\n                      <section style={styles.sectionDated}>\r\n                        <div style={styles.date}>{project.name}</div>\r\n                        <div>\r\n                          <ul style={styles.ul}>\r\n                            {project.bullets.map((bullet) => {\r\n                              return <li style={styles.li}>{bullet}</li>;\r\n                            })}\r\n                          </ul>\r\n                        </div>\r\n                      </section>\r\n                    );\r\n                  })}\r\n                </section>\r\n\r\n                <section style={styles.section}>\r\n                  <div style={styles.typography.heading}>Education</div>\r\n                  {resume.education.map((education) => {\r\n                    return (\r\n                      <section style={styles.sectionDated}>\r\n                        <div style={styles.date}>{education.date}</div>\r\n                        {education.sections.map((section) => {\r\n                          return (\r\n                            <div>\r\n                              <div\r\n                                style={{\r\n                                  ...styles.typography.sHeading,\r\n                                  ...styles.sectionSHeading,\r\n                                }}\r\n                              >\r\n                                {section.name}\r\n                              </div>\r\n                              {section.name && (\r\n                                <div\r\n                                  style={{\r\n                                    ...styles.typography.xs,\r\n                                    ...styles.shortDesc,\r\n                                  }}\r\n                                >\r\n                                  {section.shortDesc}\r\n                                </div>\r\n                              )}\r\n                              <ul style={styles.ul}>\r\n                                {section.bullets.map((bullet) => {\r\n                                  return <li style={styles.li}>{bullet}</li>;\r\n                                })}\r\n                              </ul>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </section>\r\n                    );\r\n                  })}\r\n                </section>\r\n\r\n                <section style={styles.section}>\r\n                  <div style={styles.typography.heading}>Certifications</div>\r\n                  <ul style={styles.ul}>\r\n                    {resume.certifications.map((certification) => {\r\n                      return <li style={styles.li}>{certification}</li>;\r\n                    })}\r\n                  </ul>\r\n                </section>\r\n\r\n                <section style={styles.section}>\r\n                  <div style={styles.typography.heading}>Interests</div>\r\n                  <ul style={styles.ul}>\r\n                    {resume.interests.map((interest) => {\r\n                      return <li style={styles.li}>{interest}</li>;\r\n                    })}\r\n                  </ul>\r\n                </section>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n",{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":12,"column":3,"nodeType":"52","messageId":"53","endLine":12,"endColumn":6},{"ruleId":"50","severity":1,"message":"54","line":13,"column":3,"nodeType":"52","messageId":"53","endLine":13,"endColumn":7},{"ruleId":"55","severity":1,"message":"56","line":28,"column":5,"nodeType":"57","messageId":"58","endLine":28,"endColumn":12},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'Tab' is defined but never used.","Identifier","unusedVar","'Tabs' is defined but never used.","no-dupe-keys","Duplicate key 'padding'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation"]